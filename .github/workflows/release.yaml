name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  draft_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false

  release-linux:
    name: Create Release for Linux (static)
    needs: draft_release
    runs-on: ubuntu-latest
    container: alpine:3.12
    steps:
      - name: Install system dependencies
        run: |
          apk add --no-cache curl gcc g++ gmp-dev ncurses-dev libffi-dev make xz tar perl git bash sudo binutils-gold
          apk add --no-cache zlib zlib-dev zlib-static gmp gmp-dev ncurses-static
        shell: bash

      - name: Install ghcup
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://downloads.haskell.org/~ghcup/0.1.11/x86_64-linux-ghcup-0.1.11 > /usr/bin/ghcup
          chmod +x /usr/bin/ghcup
          echo "::add-path::$HOME/.ghcup/bin"
        shell: bash

      - name: Install GHC and cabal
        run: |
          ghcup install ghc 8.8.4
          ghcup set ghc 8.8.4
          ghcup install cabal 3.2.0.0
        shell: bash

      - name: Update cabal cache
        run: cabal update
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add ~/.local/bin to PATH
        run: echo "::add-path::$HOME/.local/bin"
        shell: bash

      - name: Install shelltestrunner
        run: cabal install --installdir="$HOME/.local/bin" --install-method=copy --overwrite-policy=always shelltestrunner
        shell: bash

      - name: Install cabal dependencies
        run: cabal build --only-dependencies --ghc-options='-split-sections -optl-static'
        shell: bash

      - name: Install
        run: cabal install --installdir="$HOME/.local/bin" --install-method=copy --overwrite-policy=always --ghc-options='-split-sections -optl-static'
        shell: bash

      - name: Strip
        run: strip ~/.local/bin/stack2cabal
        shell: bash

      - name: Run tests
        run: |
          cabal test --ghc-options='-split-sections -optl-static' all
          ~/.local/bin/shelltest shelltest.test
        shell: bash

      - run: echo ::set-env name=HOME::$HOME
        shell: bash

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft_release.outputs.upload_url }}
          asset_path: ${{ env.HOME }}/.local/bin/stack2cabal
          asset_name: stack2cabal-linux
          asset_content_type: application/octet-stream

      - if: always()
        uses: actions/upload-artifact@v2
        with:
          name: plan.json
          path: ./dist-newstyle/cache/plan.json

  release-mac-win:
    name: Create Release for macOS
    needs: draft_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macOS-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-haskell@v1.1.2
        with:
          ghc-version: 8.8.4
          cabal-version: 3.2.0.0

      - name: Add ~/.local/bin to PATH
        run: echo "::add-path::$HOME/.local/bin"
        shell: bash

      - name: Update cabal cache
        run: cabal update
        shell: bash

      - name: Install shelltestrunner
        run: cabal install --installdir="$HOME/.local/bin" --install-method=copy --overwrite-policy=always -f _regex-posix-clib shelltestrunner
        shell: bash

      - name: Install cabal dependencies
        run: cabal build --only-dependencies
        shell: bash

      - name: Install
        run: cabal install --installdir="$HOME/.local/bin" --install-method=copy --overwrite-policy=always
        shell: bash

      - name: Strip mac
        if: matrix.os == 'macOS-latest'
        run: strip -s ~/.local/bin/stack2cabal
        shell: bash

      - name: Run tests
        run: |
          cabal test all
          ~/.local/bin/shelltest shelltest.test
        shell: bash

      - run: echo ::set-env name=HOME::$HOME
        shell: bash

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft_release.outputs.upload_url }}
          asset_path: ${{ env.HOME }}/.local/bin/stack2cabal
          asset_name: stack2cabal-${{ matrix.os }}
          asset_content_type: application/octet-stream

      - if: always()
        uses: actions/upload-artifact@v2
        with:
          name: plan.json
          path: ./dist-newstyle/cache/plan.json
